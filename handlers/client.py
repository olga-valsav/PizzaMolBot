from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.filters.state import StatesGroup, State

from create_bot import dp, bot
from keyboards.client_kb import kb_client, kb_size
from database import sqlite_db


class FSMClient(StatesGroup):
    name = State()
    pizza_name = State()
    size = State()
    address = State()
    phone = State()


# @dp.message_handler(commands=['start', 'help'])
async def command_start(message: types.Message, state: FSMContext):
    try:
        await state.finish()
        await bot.send_message(message.from_user.id,
                               '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –•–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑?',
                               reply_markup=kb_client)

    except:
        await message.reply('–û—à–∏–±–∫–∞')


async def pizza_open_command(message: types.Message):
    await bot.send_message(message.from_user.id, '–í—Å-–ß—Ç —Å 9:00 –¥–æ 20:00, –ü—Ç-–°–± —Å 10:00 –¥–æ 23:00',
                           reply_markup=kb_client)


async def create_order(message: types.Message):
    await FSMClient.name.set()
    await message.reply('–í—ã –Ω–∞—á–∞–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "–æ—Ç–º–µ–Ω–∞" –¥–ª—è –æ—Ç–º–µ–Ω—ã –∑–∞–∫–∞–∑–∞.\n–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∏–º—è:')


async def wait_client_name(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['name'] = message.text
    await FSMClient.next()
    await message.reply('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∏—Ü—Ü—ã')


async def wait_pizza_name(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['pizza_name'] = message.text
    await FSMClient.next()
    await bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –ø–∏—Ü—Ü—ã', reply_markup=kb_size)


async def wait_pizza_size(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['pizza_size'] = message.text
    await FSMClient.next()
    await message.reply("–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –∞–¥—Ä–µ—Å")


async def wait_client_address(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['client_address'] = message.text
    await FSMClient.next()
    await message.reply("–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω")


async def wait_client_phone(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['client_phone'] = message.text

    await sqlite_db.sql_add_order(state)
    await state.finish()  # –∫–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –º–∞—à–∏–Ω–æ-—Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —á—Ç–æ –º—ã –ø–æ–ª—É—á–∏–ª–∏ –≤—ã—à–∏ –Ω—É–∂–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å
    await message.reply("–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑, –æ–ø–µ—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!", reply_markup=kb_client)


async def cansel_handler(message: types.Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        return
    await state.finish()
    await message.reply('–í—ã–ø–æ–ª–Ω–µ–Ω–æ!', reply_markup=kb_client)


async def pizza_place_command(message: types.Message, state: FSMContext):
    await state.finish()
    await bot.send_message(message.from_user.id, '—É–ª. –ö–æ–ª–±–∞—Å–Ω–∞—è 15', reply_markup=kb_client)


async def pizza_menu_command(message: types.Message, state: FSMContext):
    await state.finish()
    await bot.send_message(message.from_user.id, '–ù–∞—à–µ –º–µ–Ω—é', reply_markup=kb_client)
    await sqlite_db.sql_read(message)


def register_handlers_client(dp: Dispatcher):
    dp.register_message_handler(cansel_handler, Text(startswith='–æ—Ç–º–µ–Ω–∞', ignore_case=True), state='*')

    dp.register_message_handler(command_start, commands=['start'], state='*')
    dp.register_message_handler(pizza_open_command, Text(startswith='üï∞–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã'), state='*')
    dp.register_message_handler(pizza_place_command, Text(startswith='üìü–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ'), state='*')
    dp.register_message_handler(pizza_menu_command, Text(startswith='üçï–ú–µ–Ω—é'), state='*')
    dp.register_message_handler(create_order, Text(startswith='üçΩ–°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑'), state=None)
    dp.register_message_handler(wait_client_name, state=FSMClient.name)
    dp.register_message_handler(wait_pizza_name, state=FSMClient.pizza_name)
    dp.register_message_handler(wait_pizza_size, state=FSMClient.size)
    dp.register_message_handler(wait_client_address, state=FSMClient.address)
    dp.register_message_handler(wait_client_phone, state=FSMClient.phone)
    dp.register_message_handler(cansel_handler, state='*', commands='–æ—Ç–º–µ–Ω–∞')
